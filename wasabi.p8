pico-8 cartridge // http://www.pico-8.com
version 33
__lua__
--wasabi

function _init()
	poke(0x5f5c,255)
	palt(0,false)
	palt(14,true)
end

function _update60()
	update_controller()
 	guy:update()

	for b in all(blocks) do
		b:update()
	end

	if xinput != last_input then
		anim(cam,"x",xinput*24-56,180,out_quad)
	end
	
	update_object(cam)

	
end

cam = {x = 0, a = {}}

function _draw()
 	cls(12)
	local m = mid(0,cam.x+guy.x,312)
	camera(m)
	map(0,0,0,0,64,16)
	guy:draw()

	for b in all(blocks) do
		b:draw()
	end
	
	print(stat(1),0,0,0)
	print(xinput == last_input)
end


blocks = {}
block = {state = 0, t = 0}
function block:new(x,y,c,s)
	local obj = {
		x = x,
		y = y,
		c = c,
		s = s
	}
	add(blocks,obj)
	return setmetatable(obj, {__index = self})
end
function block:update()

end
function block:on_hit()
	print("\a")
end
function block:draw()
	pal(8,self.c)
	spr(112,self.x,self.y)
	if type(self.s) == "string" then
		print(self.s,self.x+2,self.y+1,7)
	end
	pal(8,8)
end


block:new(116,56,11,"E")
block:new(132,56,11,"E")
block:new(148,56,11,"E")

block:new(180,40,11,"E")

block:new(276,40,11,"E")
block:new(292,40,11,"E")
block:new(308,40,11,"E")

guy = {
	x = 60,
	y = 60,
	s = 1,
	f = false,
	vx = 0,
	vy = 0,
	remainder_x = 0,
	remainder_y = 0
}

function guy:move_x(x)
	self.remainder_x += x
	local mx = flr(self.remainder_x + 0.5)
	self.remainder_x -= mx
	
	local total = mx
	local mxs = sgn(mx)
	while mx != 0 do
		if self:check_solid(mxs, 0) then
			return true
		else
			self.x += mxs
			mx -= mxs
		end
	end

	return false
end

function guy:move_y(y)
	self.remainder_y += y
	local my = flr(self.remainder_y + 0.5)
	self.remainder_y -= my
	
	local total = my
	local mys = sgn(my)
	while my != 0 do
		if self:check_solid(0, mys) then
			return true
		else
			self.y += mys
			my -= mys
		end
	end

	return false
end

function guy:check_solid(ox,oy)
	ox = ox or 0
	oy = oy or 0

	for i = (ox + self.x+2)>>3&0x8fff,(ox + self.x + 10)>>3&0x8fff do
		local y = (oy+self.y+14)>>3
		local j = y&0x7fff
		if fget(mget(i, j), 0) and j == y and self.vy >= 0 then
			return true
		end
	end

	if mid(30,ox+self.x,372) != ox + self.x then
		return true
	end
	--checks objects for solidity
	for b in all(blocks) do
		if self:overlaps(b, ox, oy) then
			return true
		end
	end

	return false
end

function guy:overlaps(b, ox, oy)
    if self == b then return false end
    ox = ox or 0
    oy = oy or 0
	if (oy + self.y + 2 == b.y + 8 and ox + self.x + 10 > b.x and ox + self.x + 2 < b.x + 8 and oy == -1) b:on_hit(self)
    return
        ox + self.x + 10 > b.x and
        oy + self.y + 14 > b.y and
        ox + self.x + 2 < b.x + 8 and
        oy + self.y + 2 < b.y + 8
end


function guy:update()
	local on_ground = self:check_solid(0,1)

	if xinput != 0 then
		self.vx = xinput*1.2
		self.f = (xinput == -1)
	elseif self.vx != 0 then
		self.vx = approach(self.vx, 0, 0.1)
	end
	
	if not on_ground then
		self.vy = min(self.vy + 0.06, 4.4) 
	else
		self.vy = 0
	end

	if on_ground and btnp(2) then
		self.vy = -1.6
	end

	self:move_x(self.vx)
	self:move_y(self.vy)

	
end

function guy:draw()
	spr(self.s,self.x,self.y,1.625,2,self.f)
	--print(self:check_solid(0,1),self.x,self.y-8,0)
	--print(self.vy,56,self.y-8,0)
end

last_input = 0
xinput = 0

function update_controller()
	last_input = xinput
	xinput = 0
	if btn(0) then
		xinput -= 1
	end
	if btn(1) then
	 xinput +=1
	end
end

function approach(x, target, max_delta)
	return x < target and min(x + max_delta, target) or max(x - max_delta, target)
end

function anim(obj,p,to,d,f,rep,rev)
-- start an animation for object obj

	local f, rep, rev = f or linear, rep or 1, rev or 0
	local b = obj[p]
    -- p: paramter ie "x", "y", "spr"
	obj.a[p] = {
		b=b, -- (b)egin value of parameter
		c=to-b, -- (c)hange of the paramter
  t=0, -- current (t)ime of the animation
  d=d, -- total anim (d)uration, in frames
		f=f, -- interpolation (f)unction, default linear
		rep=rep, -- how many times to (rep)eat (default 1); -1 = forever
		rev=rev -- 1 = if will be (rev)ersed after the animation, 0 = no
	}
end

function update_object(obj)
-- goes through all objects and adjusts its paramters
-- depending on the animation queue it has
	for p,a in pairs(obj.a) do
		a.t += 1
		obj[p]=a.f(a.t,a.b,a.c,a.d)
		if a.t==a.d then
			if (a.rep>0 and a.rev!=1) a.rep -= 1 -- reduce reps by 1
			if a.rep==0 then 
				obj.a[p]=nil --kill object if no more reps
			elseif a.rev==0 then 
				a.t=0 -- reset time to zero, or
			else 
				anim(obj, p, a.b, a.d, a.f, a.rep, -a.rev) --play reverse anim
			end 
		end
	end 
end

function out_quad(t, b, c, d)
    t /= d
    return -c * t * (t - 2) + b
end
__gfx__
00000000eeeeeeee0eeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeee080eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700eee00008800eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000ee088888880eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000ee08ffffff0eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700e0f8f0ff0f0eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000e0f8ffffff0eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ee0ff0000f0eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ee00fffff0eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000e0777b7b770eeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000707777b7070eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000f077b7b700f0eee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000e0ccccc0e0eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ee00c000c0eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ee0b0ee0b0eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ee00eee000eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee000000000000000000000007bbbbbbbbbbbbbbbbbbbb70eee065555555555555560eeecccccccceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeefbbbbbbbbbbbbbbf
e0777777777777777709990907bbbbbbbbbbbbbbbbbbbb70eee07ffffffffffffff70eeecccccccc00eeeeeeeeeee00eeeeeeeeeeeeeeeeebffffffffffffffd
077bbbbbbbbbbbbbbbb0000007bbbbbbbbbbbbbbbbbbbb70eee07ffffffffffffff70eeecccccc7c080000000000080ee00000000000000ebfbbbbbbbbbbbb5d
07bbbbbbbbbbbbbbbbbbbb7007bbbbbbbbbbbbbbbbbbbb70eee07ffffffffffffff70eeecccccccce0888888888880ee0077777777777700bfb5bbbbbbbb5b5d
07bbbbbbbbbbbbbbbbbbbb7007bbbbbbbbbbbbbbbbbbbb70eee07ffffffffffffff70eeeccccccccee08000800080eee0766666666666670bfbbbbbbbbbbbb5d
07bbbbbbbbbbbbbbbbbbbb7007bbbbbbbbbbbbbbbbbbbb700ee00ff00ff00ff00ff00ee0c7ccccccee080e080e080eee0766660000666670bfbbbbbbbbbbbb5d
07bbbbbbbbbbbbbbbbbbbb70077777777777777777777770700770077007700770077007cccccccce0080008000800ee000000aaaa000000bfbbbbbbbbbbbb5d
07bbbbbbbbbbbbbbbbbbbb70000000000000000000000000c77cc77cc77cc77cc77cc77ccccccccce0888888888880ee005550aaa7055500bfbbbbbbbbbbbb5d
e00000000000000e00000000000000ee000000000000000000000000077777777777777777777770e0080000000800eee07777000077770ebfbbbbbbbbbbbb5d
007777777777770090990990990990ee705575555555575555557507000000000000000000000000ee080eeeee080eeee07777777777770ebfbbbbbbbbbbbb5d
07bbbbbbbbbbbb7000000000000000eeb3005555570000055755503bee09999999999999999990eeee080eeeee080eeee04447744744470ebfbbbbbbbbbbbb5d
07bbbbbbbbbbbb70eee00eeeeeeeeeeebb33000000333330000003bbee0ffffffffffffffffff0eeee080eeeee080eeee07477477744770ebfbbbbbbbbbbbb5d
07bbbbbbbbbbbb70ee00eeeeeeeeeeeebbbb333333bbbbb333333bbbee00000000000000000000eeee080eeeee080eeee07477477747770ebfb5bbbbbbbb5b5d
07bbbbbbbbbbbb70e00eeeeeeeeeeeeebbbbbbbbbbbbbbbbbbbbbbbbee05555555555555555550eeee080eeeee080eeee04447744774470ebfbbbbbbbbbbbb5d
07bbbbbbbbbbbb7000eeeeeeeeeeeeeebbbbbbbbbbbbbbbbbbbbbbbbeee000000000000000000eeeee080eeeee080eeee07777777777770ebf5555555555555d
07bbbbbbbbbbbb700eeeeeeeeeeeeeeebbbbbbbbbbbbbbbbbbbbbbbbeee0ffffffffffffffff0eeeee080eeeee080eeee05555555555550efddddddddddddddd
044444444444444deeeee00000000000eeeeeeee000eeeeeee0000000000000000000000000000ee000000000000000000000000000000000000000000000000
d4ddddddddddddd4eeee099999999999eeeeeeee9990eeeeeee06666666666666666666666660eee000000000000000000000000000000000000000000000000
d4000000000000d4eee0999999999999eeeeeeee99990eeeeee07766666666666666666666770eee000000000000000000000000000000000000000000000000
d4000000000000d4eee0999999999999eeeeeeee99990eeeeee07667767676677676767776670eee000000000000000000000000000000000000000000000000
d4000000000000d4eee0999999999999eeeeeeee99990eeeeee06676667676766676766766660eee000000000000000000000000000000000000000000000000
d4000000000000d4ee099999999999990ee00ee0999990eeeee06666767676667677766766660eee000000000000000000000000000000000000000000000000
d4000000000000d4ee0fffffffffffff70077007fffff0eeeee07677666776776676767776670eee000000000000000000000000000000000000000000000000
d4000000000000d4ee0fffffffffffffc77cc77cfffff0eeeee07766666666666666666666770eee000000000000000000000000000000000000000000000000
d41111ddddddddd4ee0000000000000000000000000000eeeee07777777777777777777777770eee000000000000000000000000000000000000000000000000
d41111ddddddddd4eee06666666666666666666666660eeeeee06666666666666666666666660eee000000000000000000000000000000000000000000000000
d4111dddddddddd4eee07777744444444444444477770eeeeee06666666600000000066666660eee000000000000000000000000000000000000000000000000
d4225555555555d4eee07777447747474477447747770eeeeee06666666044440444406666660eee000000000000000000000000000000000000000000000000
d4225555555555d4eee04444474447474747474744440eeeeee06666666044440444406666660eee000000000000000000000000000000000000000000000000
d4dd4444444445d4eee04444444747774747477744440eeeeee066666660444a0a44406666660eee000000000000000000000000000000000000000000000000
d4d44444444445d4eee07777477447474774474447770eeeeee06666666044440444406666660eee000000000000000000000000000000000000000000000000
d4ddddddddddddd4eee07777744444444444444477770eeeeee06666666044440444406666660eee000000000000000000000000000000000000000000000000
eee0000000000eeeeee07777777777777777777777770eee000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee
ee077777777770eeeee04444444444444444444444440eee000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee
ee060066660060eeeee04444444400000000044444440eee000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee
ee006600006600eeeee04444444011111111104444440eee000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee
ee0d00dddd00d0eeeee04444444011111111104444440eee000000000000000000000000000000000000000000000000000000000000000000000000ee0e00ee
ee06d666666d60eeeee04444444011111111104444440eee000000000000000000000000000000000000000000000000000000000000000000000000e050770e
ee06d666666d60eeeee04444444011111111104444440eee000000000000000000000000000000000000000000000000000000000000000000000000e000000e
ee0dddddddddd0eeeee04444444011111111104444440eee00000000000000000000000000000000000000000000000000000000000000000000000007777770
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007567560
08888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666660
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e055550e
__gff__
0000000000000000000000000000000000000000000000000000000000000000010101000000000000000000000000000101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000002a2b000000000000000000002c2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000004243434500000000000000000000000000003a3b000042434345000000003c3d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000005253545500000000000000000000000030212131000046474849000030212121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000006263646500000000000000000000000037383839000056575859000037383838383900006061000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000020212121212121212121343535353536212121212121212121212121212121212121212121212121212232330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000023242424242424242424242424242424242424242424242424242424242424242424242424242424242500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444426272727272727272727272727272727272727272727272727272727272727272727272727272727272844444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
